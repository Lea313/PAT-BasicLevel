import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main3 {
    private static int[] aux;
    public static void main(String[] args) throws IOException {
        BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
        String[] str = bf.readLine().split(" ");
        int n = Integer.parseInt(str[0]);
        int[] nums = new int[n];
        for(int i=0;i<n;i++){
            nums[i] = Integer.parseInt(str[i+1]);
        }
        MergeSort(nums);
        for(int i=0;i<n-1;i++){
            System.out.print(nums[i]+" ");
        }
        System.out.print(nums[n-1]);
        System.out.println();
    }
    public static void MergeSort(int[] list){
        int len = 1;
        int[] temp = new int[list.length];
        while(len<list.length){
            MergePass(list, temp, list.length, len);
            len = len*2;
            if(len>=list.length){
                for(int i =0;i<list.length;i++)
                    list[i] = temp[i];


            }
            else{
                MergePass(temp, list, list.length, len);
                len = len*2;
            }
        }

    }
    public static void Merge(int[] list, int[] temp, int i, int m, int n){
        int k = i, j = m+1;
        for(;i<=m&&j<=n;k++){
            if(list[i]<=list[j])
                temp[k] = list[i++];
            else{
                temp[k] = list[j++];
            }
        }
        while(i<=m)
            temp[k++] = list[i++];
        while(j<=n)
            temp[k++] = list[j++];
    }
    public static void MergePass(int[] list, int[] temp, int n, int len){
        int i =0;
        while(i<=n-len*2){
            Merge(list, temp, i, i+len-1, i+len*2-1);
            i = i+len*2;
        }
        if(i<n-len){
            Merge(list, temp, i, i+len-1, n-1);
        }
        else{
            for(int j =i;j<n;j++){
                temp[j] = list[j];
            }
        }
    }
}
